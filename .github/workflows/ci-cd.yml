name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'  # Substitua pela versão necessária

    - name: Change directory to src
      run: cd src

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

  deploy:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Change directory to src
      run: cd src

    - name: Deploy to IIS
      run: |
        # Comandos para deploy usando IIS no Windows
        # Exemplo:
        # - Copie os arquivos para o diretório de publicação do IIS
        # - Reinicie o site no IIS
        Copy-Item -Path "path\to\build\output" -Destination "C:\inetpub\wwwroot\your-site" -Recurse -Force
        Import-Module WebAdministration
        Restart-WebAppPool -Name "YourAppPoolName"

  versioning:
    needs: deploy
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Change directory to src
      run: cd src

    - name: Bump version and create tag
      id: bump_version
      run: |
        # Incrementar a versão no arquivo de projeto
        $version = "1.0.$(date +'%Y%m%d%H%M')"
        [xml]$xml = Get-Content "YourProjectFile.csproj"
        $xml.Project.PropertyGroup.Version = $version
        $xml.Save("YourProjectFile.csproj")
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add YourProjectFile.csproj
        git commit -m "Bump version to $version"
        git tag "v$version"
        git push origin main --tags

    - name: Create GitHub release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.version }}
        release_name: Release ${{ steps.bump_version.outputs.version }}
        body: |
          Changes in this release:
          - Automated version bump and deployment
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
